// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Stock_Data_Api.Data;

#nullable disable

namespace Stock_Data_Api.Migrations
{
    [DbContext(typeof(DataDbContext))]
    [Migration("20240713180250_updateTables")]
    partial class updateTables
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Stock_Data_Api.Models.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AddressLine1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressLine2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Country")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Fax")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("PostalCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("State")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("Stock_Data_Api.Models.AssociatedDocs", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.HasKey("Id");

                    b.ToTable("AssociatedDocs");
                });

            modelBuilder.Entity("Stock_Data_Api.Models.AssociatedDocsFile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AssociatedDocsId")
                        .HasColumnType("int");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Label")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AssociatedDocsId");

                    b.ToTable("AssociatedDocsFiles");
                });

            modelBuilder.Entity("Stock_Data_Api.Models.Bank", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BankName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("BranchName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Banks");
                });

            modelBuilder.Entity("Stock_Data_Api.Models.Cheque", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AccountHolderName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("BankId")
                        .HasColumnType("int");

                    b.Property<string>("ChequeNumber")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<int>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("IssueDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Memo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PayeeName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BankId");

                    b.ToTable("Cheques");
                });

            modelBuilder.Entity("Stock_Data_Api.Models.DataIOT", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("X1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("X2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("X3")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("IOTtable");
                });

            modelBuilder.Entity("Stock_Data_Api.Models.Dimension", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<float>("Height")
                        .HasColumnType("real");

                    b.Property<float>("Length")
                        .HasColumnType("real");

                    b.Property<float>("Width")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.ToTable("Dimensions");
                });

            modelBuilder.Entity("Stock_Data_Api.Models.Frequent_Entiities.DeliveryMode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DeliveryModes");
                });

            modelBuilder.Entity("Stock_Data_Api.Models.Frequent_Entiities.TabArticles", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("fraisdexpedition")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("sousTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("taxTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("total")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("TabArticles");
                });

            modelBuilder.Entity("Stock_Data_Api.Models.Frequent_Entiities.TabArticlesItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AccountId")
                        .HasColumnType("int");

                    b.Property<int?>("ArticleId")
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Discount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("DiscountType")
                        .HasColumnType("int");

                    b.Property<double>("Quantity")
                        .HasColumnType("float");

                    b.Property<int?>("TaxId")
                        .HasColumnType("int");

                    b.Property<double?>("Total")
                        .HasColumnType("float");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ArticleId");

                    b.HasIndex("TaxId");

                    b.ToTable("TabArticlesItems");
                });

            modelBuilder.Entity("Stock_Data_Api.Models.Import.Group_Classes.InvoiceImportCreditGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("InvoiceImportCreditGroups");
                });

            modelBuilder.Entity("Stock_Data_Api.Models.Import.Group_Classes.InvoiceImportGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("InvoiceImportGroups");
                });

            modelBuilder.Entity("Stock_Data_Api.Models.Import.Group_Classes.OrderToSupplierGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("OrderToSupplierGroups");
                });

            modelBuilder.Entity("Stock_Data_Api.Models.Import.InvoiceCreditImport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AssociatedDocsId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("InvoiceDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("InvoiceImportGroupId")
                        .HasColumnType("int");

                    b.Property<string>("NInvoice")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NOrder")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PaymentConditionId")
                        .HasColumnType("int");

                    b.Property<int?>("SellerId")
                        .HasColumnType("int");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int");

                    b.Property<int>("TabArticlesId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AssociatedDocsId");

                    b.HasIndex("InvoiceImportGroupId");

                    b.HasIndex("PaymentConditionId");

                    b.HasIndex("SellerId");

                    b.HasIndex("SupplierId");

                    b.HasIndex("TabArticlesId");

                    b.ToTable("InvoiceCreditImports");
                });

            modelBuilder.Entity("Stock_Data_Api.Models.Import.InvoiceImport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AssociatedDocsId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("InvoiceDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("InvoiceImportGroupId")
                        .HasColumnType("int");

                    b.Property<string>("NInvoice")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NOrder")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PaymentConditionId")
                        .HasColumnType("int");

                    b.Property<int?>("PaymentId")
                        .HasColumnType("int");

                    b.Property<int?>("SellerId")
                        .HasColumnType("int");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int");

                    b.Property<int>("TabArticlesId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AssociatedDocsId");

                    b.HasIndex("InvoiceImportGroupId");

                    b.HasIndex("PaymentConditionId");

                    b.HasIndex("PaymentId");

                    b.HasIndex("SellerId");

                    b.HasIndex("SupplierId");

                    b.HasIndex("TabArticlesId");

                    b.ToTable("InvoiceImports");
                });

            modelBuilder.Entity("Stock_Data_Api.Models.Import.OrderToSupplier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AssociatedDocsId")
                        .HasColumnType("int");

                    b.Property<int?>("DeliveryAddressId")
                        .HasColumnType("int");

                    b.Property<int?>("DeliveryModeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EstimatedExpeditionDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("GroupId")
                        .HasColumnType("int");

                    b.Property<string>("Info")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NOrder")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NReference")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("OrderToSupplierGroupId")
                        .HasColumnType("int");

                    b.Property<int?>("PaymentConditionId")
                        .HasColumnType("int");

                    b.Property<int?>("PaymentId")
                        .HasColumnType("int");

                    b.Property<int?>("PersonToContactId")
                        .HasColumnType("int");

                    b.Property<int?>("SellerId")
                        .HasColumnType("int");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int");

                    b.Property<int>("TabArticlesId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AssociatedDocsId");

                    b.HasIndex("DeliveryAddressId");

                    b.HasIndex("DeliveryModeId");

                    b.HasIndex("GroupId");

                    b.HasIndex("OrderToSupplierGroupId");

                    b.HasIndex("PaymentConditionId");

                    b.HasIndex("PaymentId");

                    b.HasIndex("PersonToContactId");

                    b.HasIndex("SellerId");

                    b.HasIndex("SupplierId");

                    b.HasIndex("TabArticlesId");

                    b.ToTable("OrderToSuppliers");
                });

            modelBuilder.Entity("Stock_Data_Api.Models.Import.PaymentImport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AssociatedDocsId")
                        .HasColumnType("int");

                    b.Property<decimal>("BankCharges")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("N_Payment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("N_Reference")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AssociatedDocsId");

                    b.HasIndex("SupplierId");

                    b.ToTable("PaymentImports");
                });

            modelBuilder.Entity("Stock_Data_Api.Models.Import.PaymentOfModeImport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<int>("PaymentImportId")
                        .HasColumnType("int");

                    b.Property<int>("PaymentModeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PaymentImportId");

                    b.HasIndex("PaymentModeId");

                    b.ToTable("PaymentOfModeImports");
                });

            modelBuilder.Entity("Stock_Data_Api.Models.Import.PersonContactsSupplier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("PersonToContactId")
                        .HasColumnType("int");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PersonToContactId");

                    b.HasIndex("SupplierId");

                    b.ToTable("PersonContactsSuppliers");
                });

            modelBuilder.Entity("Stock_Data_Api.Models.Import.Supplier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AssociatedDocsId")
                        .HasColumnType("int");

                    b.Property<int?>("BillingAddressId")
                        .HasColumnType("int");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<int?>("DeliveryAddressId")
                        .HasColumnType("int");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PaymentConditionId")
                        .HasColumnType("int");

                    b.Property<string>("PhonePortable")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("PhonePro")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("Title")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<int?>("taxId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AssociatedDocsId");

                    b.HasIndex("BillingAddressId");

                    b.HasIndex("DeliveryAddressId");

                    b.HasIndex("PaymentConditionId");

                    b.HasIndex("taxId");

                    b.ToTable("Suppliers");
                });

            modelBuilder.Entity("Stock_Data_Api.Models.Inventory.Article", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ArticleGroupId")
                        .HasColumnType("int");

                    b.Property<string>("ArticleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ArticleStockInfoId")
                        .HasColumnType("int");

                    b.Property<int?>("DimensionId")
                        .HasColumnType("int");

                    b.Property<string>("Ean")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("FollowStock")
                        .HasColumnType("bit");

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ImportInfoId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsReturnable")
                        .HasColumnType("bit");

                    b.Property<string>("Isbn")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("ManufacturerId")
                        .HasColumnType("int");

                    b.Property<int?>("MarkId")
                        .HasColumnType("int");

                    b.Property<string>("Mpn")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("SellInfoId")
                        .HasColumnType("int");

                    b.Property<string>("Sku")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TypeArticle")
                        .HasColumnType("int");

                    b.Property<int?>("UnitId")
                        .HasColumnType("int");

                    b.Property<string>("Upc")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<float?>("Weight")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("ArticleGroupId");

                    b.HasIndex("ArticleStockInfoId");

                    b.HasIndex("DimensionId");

                    b.HasIndex("ImportInfoId");

                    b.HasIndex("ManufacturerId");

                    b.HasIndex("MarkId");

                    b.HasIndex("SellInfoId");

                    b.HasIndex("UnitId");

                    b.ToTable("Articles");
                });

            modelBuilder.Entity("Stock_Data_Api.Models.Inventory.ArticleGroup", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GroupName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("ArticleGroups");
                });

            modelBuilder.Entity("Stock_Data_Api.Models.Inventory.ArticleImportInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("PricePerUnit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("SupplierId")
                        .HasColumnType("int");

                    b.Property<int?>("TaxId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SupplierId");

                    b.HasIndex("TaxId");

                    b.ToTable("ArticleImportInfos");
                });

            modelBuilder.Entity("Stock_Data_Api.Models.Inventory.ArticleSellingInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("PricePerUnit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("TaxId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TaxId");

                    b.ToTable("ArticleSellingInfos");
                });

            modelBuilder.Entity("Stock_Data_Api.Models.Inventory.ArticleStockInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccountIdSuivi")
                        .HasColumnType("int");

                    b.Property<long?>("Seuil")
                        .HasColumnType("bigint");

                    b.Property<long?>("StockEngagee")
                        .HasColumnType("bigint");

                    b.Property<long?>("StockOuverture")
                        .HasColumnType("bigint");

                    b.Property<long?>("Stockdisponible")
                        .HasColumnType("bigint");

                    b.Property<long?>("TauxOuverture")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("ArticleStockInfos");
                });

            modelBuilder.Entity("Stock_Data_Api.Models.Inventory.Mark", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("MarkName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Marks");
                });

            modelBuilder.Entity("Stock_Data_Api.Models.Manufacturer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Manufacturers");
                });

            modelBuilder.Entity("Stock_Data_Api.Models.PaymentCondition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("PaymentConditions");
                });

            modelBuilder.Entity("Stock_Data_Api.Models.PaymentMode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("PaymentModes");
                });

            modelBuilder.Entity("Stock_Data_Api.Models.PersonToContact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Department")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Designation")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("PhoneNumberPortable")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("PhoneNumberPro")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("Title")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("PersonToContacts");
                });

            modelBuilder.Entity("Stock_Data_Api.Models.Sell.ArticlesInfo", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int?>("TabArticlesId")
                        .HasColumnType("int");

                    b.Property<int>("articleId")
                        .HasColumnType("int");

                    b.Property<decimal>("montant")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("note")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("quantite")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("taux")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("taxId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("TabArticlesId");

                    b.ToTable("ArticlesInf");
                });

            modelBuilder.Entity("Stock_Data_Api.Models.Sell.ChequeOfModeSell", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<int>("PaymentModeId")
                        .HasColumnType("int");

                    b.Property<int>("PaymentSellId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PaymentModeId");

                    b.HasIndex("PaymentSellId");

                    b.ToTable("ChequeOfModeSells");
                });

            modelBuilder.Entity("Stock_Data_Api.Models.Sell.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AssociatedDocsId")
                        .HasColumnType("int");

                    b.Property<int?>("BillingAddressId")
                        .HasColumnType("int");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<int?>("DeliveryAddressId")
                        .HasColumnType("int");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PaymentConditionId")
                        .HasColumnType("int");

                    b.Property<string>("PhonePortable")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("PhonePro")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("Title")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<int?>("taxId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AssociatedDocsId");

                    b.HasIndex("BillingAddressId");

                    b.HasIndex("DeliveryAddressId");

                    b.HasIndex("PaymentConditionId");

                    b.HasIndex("taxId");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("Stock_Data_Api.Models.Sell.CustumerOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AssociatedDocsId")
                        .HasColumnType("int");

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<int?>("DeliveryAddressId")
                        .HasColumnType("int");

                    b.Property<int?>("DeliveryModeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EstimatedExpeditionDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("GroupId")
                        .HasColumnType("int");

                    b.Property<string>("Info")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NOrder")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NReference")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("OrderToSupplierGroupId")
                        .HasColumnType("int");

                    b.Property<int?>("PaymentConditionId")
                        .HasColumnType("int");

                    b.Property<int?>("PaymentId")
                        .HasColumnType("int");

                    b.Property<int?>("PersonToContactId")
                        .HasColumnType("int");

                    b.Property<int?>("SellerId")
                        .HasColumnType("int");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.Property<int>("TabArticlesId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AssociatedDocsId");

                    b.HasIndex("ClientId");

                    b.HasIndex("DeliveryAddressId");

                    b.HasIndex("DeliveryModeId");

                    b.HasIndex("GroupId");

                    b.HasIndex("OrderToSupplierGroupId");

                    b.HasIndex("PaymentConditionId");

                    b.HasIndex("PaymentId");

                    b.HasIndex("PersonToContactId");

                    b.HasIndex("SellerId");

                    b.HasIndex("TabArticlesId");

                    b.ToTable("CustumerOrders");
                });

            modelBuilder.Entity("Stock_Data_Api.Models.Sell.Group_Classes.ClientOrderGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("ClientOrderGroups");
                });

            modelBuilder.Entity("Stock_Data_Api.Models.Sell.Group_Classes.InvoiceSellCreditGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("InvoiceSellCreditGroups");
                });

            modelBuilder.Entity("Stock_Data_Api.Models.Sell.Group_Classes.InvoiceSellGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double>("MaxAmount")
                        .HasColumnType("float");

                    b.Property<int?>("RelatedInvoiceImportId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RelatedInvoiceImportId");

                    b.ToTable("InvoiceSellGroups");
                });

            modelBuilder.Entity("Stock_Data_Api.Models.Sell.InvoiceCreditSell", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AssociatedDocsId")
                        .HasColumnType("int");

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("InvoiceDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("InvoiceSellGroupId")
                        .HasColumnType("int");

                    b.Property<string>("NInvoice")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NOrder")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PaymentConditionId")
                        .HasColumnType("int");

                    b.Property<int?>("SellerId")
                        .HasColumnType("int");

                    b.Property<int>("TabArticlesId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AssociatedDocsId");

                    b.HasIndex("ClientId");

                    b.HasIndex("InvoiceSellGroupId");

                    b.HasIndex("PaymentConditionId");

                    b.HasIndex("SellerId");

                    b.HasIndex("TabArticlesId");

                    b.ToTable("InvoiceCreditSells");
                });

            modelBuilder.Entity("Stock_Data_Api.Models.Sell.InvoiceSell", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AssociatedDocsId")
                        .HasColumnType("int");

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("GeneralConditions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("InvoiceDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NInvoice")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NOrder")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PaymentConditionId")
                        .HasColumnType("int");

                    b.Property<int?>("SellerId")
                        .HasColumnType("int");

                    b.Property<int>("TabArticlesId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AssociatedDocsId");

                    b.HasIndex("ClientId");

                    b.HasIndex("PaymentConditionId");

                    b.HasIndex("SellerId");

                    b.HasIndex("TabArticlesId");

                    b.ToTable("InvoiceSells");
                });

            modelBuilder.Entity("Stock_Data_Api.Models.Sell.PaymentOfModeSell", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<int>("PaymentModeId")
                        .HasColumnType("int");

                    b.Property<int>("PaymentSellId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PaymentModeId");

                    b.HasIndex("PaymentSellId");

                    b.ToTable("PaymentOfModeSells");
                });

            modelBuilder.Entity("Stock_Data_Api.Models.Sell.PaymentSell", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AssociatedDocsId")
                        .HasColumnType("int");

                    b.Property<decimal>("BankCharges")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("N_Payment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("N_Reference")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AssociatedDocsId");

                    b.HasIndex("ClientId");

                    b.ToTable("PaymentSells");
                });

            modelBuilder.Entity("Stock_Data_Api.Models.Sell.PersonContactsClient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ClientId")
                        .HasColumnType("int");

                    b.Property<int?>("PersonToContactId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("PersonToContactId");

                    b.ToTable("PersonContactsClients");
                });

            modelBuilder.Entity("Stock_Data_Api.Models.Seller", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Sellers");
                });

            modelBuilder.Entity("Stock_Data_Api.Models.Tax", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Ratio")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Taxes");
                });

            modelBuilder.Entity("Stock_Data_Api.Models.Unit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Units");
                });

            modelBuilder.Entity("Stock_Data_Api.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("RefreshToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RefreshTokenExperyTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tocken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Stock_Data_Api.Models.AssociatedDocsFile", b =>
                {
                    b.HasOne("Stock_Data_Api.Models.AssociatedDocs", null)
                        .WithMany("AssociatedDocsFiles")
                        .HasForeignKey("AssociatedDocsId");
                });

            modelBuilder.Entity("Stock_Data_Api.Models.Cheque", b =>
                {
                    b.HasOne("Stock_Data_Api.Models.Bank", "Bank")
                        .WithMany()
                        .HasForeignKey("BankId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bank");
                });

            modelBuilder.Entity("Stock_Data_Api.Models.Frequent_Entiities.TabArticlesItem", b =>
                {
                    b.HasOne("Stock_Data_Api.Models.Inventory.Article", "Article")
                        .WithMany()
                        .HasForeignKey("ArticleId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Stock_Data_Api.Models.Tax", "Tax")
                        .WithMany()
                        .HasForeignKey("TaxId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Article");

                    b.Navigation("Tax");
                });

            modelBuilder.Entity("Stock_Data_Api.Models.Import.InvoiceCreditImport", b =>
                {
                    b.HasOne("Stock_Data_Api.Models.AssociatedDocs", "AssociatedDocs")
                        .WithMany()
                        .HasForeignKey("AssociatedDocsId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Stock_Data_Api.Models.Import.Group_Classes.InvoiceImportCreditGroup", "InvoiceImportGroup")
                        .WithMany()
                        .HasForeignKey("InvoiceImportGroupId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Stock_Data_Api.Models.PaymentCondition", "PaymentCondition")
                        .WithMany()
                        .HasForeignKey("PaymentConditionId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Stock_Data_Api.Models.Seller", "Seller")
                        .WithMany()
                        .HasForeignKey("SellerId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Stock_Data_Api.Models.Import.Supplier", "Supplier")
                        .WithMany()
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Stock_Data_Api.Models.Frequent_Entiities.TabArticles", "TabArticles")
                        .WithMany()
                        .HasForeignKey("TabArticlesId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("AssociatedDocs");

                    b.Navigation("InvoiceImportGroup");

                    b.Navigation("PaymentCondition");

                    b.Navigation("Seller");

                    b.Navigation("Supplier");

                    b.Navigation("TabArticles");
                });

            modelBuilder.Entity("Stock_Data_Api.Models.Import.InvoiceImport", b =>
                {
                    b.HasOne("Stock_Data_Api.Models.AssociatedDocs", "AssociatedDocs")
                        .WithMany()
                        .HasForeignKey("AssociatedDocsId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Stock_Data_Api.Models.Import.Group_Classes.InvoiceImportGroup", "InvoiceImportGroup")
                        .WithMany()
                        .HasForeignKey("InvoiceImportGroupId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Stock_Data_Api.Models.PaymentCondition", "PaymentCondition")
                        .WithMany()
                        .HasForeignKey("PaymentConditionId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Stock_Data_Api.Models.Import.PaymentImport", "Payment")
                        .WithMany()
                        .HasForeignKey("PaymentId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Stock_Data_Api.Models.Seller", "Seller")
                        .WithMany()
                        .HasForeignKey("SellerId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Stock_Data_Api.Models.Import.Supplier", "Supplier")
                        .WithMany()
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Stock_Data_Api.Models.Frequent_Entiities.TabArticles", "TabArticles")
                        .WithMany()
                        .HasForeignKey("TabArticlesId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("AssociatedDocs");

                    b.Navigation("InvoiceImportGroup");

                    b.Navigation("Payment");

                    b.Navigation("PaymentCondition");

                    b.Navigation("Seller");

                    b.Navigation("Supplier");

                    b.Navigation("TabArticles");
                });

            modelBuilder.Entity("Stock_Data_Api.Models.Import.OrderToSupplier", b =>
                {
                    b.HasOne("Stock_Data_Api.Models.AssociatedDocs", "AssociatedDocs")
                        .WithMany()
                        .HasForeignKey("AssociatedDocsId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Stock_Data_Api.Models.Address", "DeliveryAddress")
                        .WithMany()
                        .HasForeignKey("DeliveryAddressId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Stock_Data_Api.Models.Frequent_Entiities.DeliveryMode", "DeliveryMode")
                        .WithMany()
                        .HasForeignKey("DeliveryModeId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Stock_Data_Api.Models.Import.Group_Classes.OrderToSupplierGroup", "Group")
                        .WithMany()
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Stock_Data_Api.Models.Sell.Group_Classes.InvoiceSellGroup", "OrderToSupplierGroup")
                        .WithMany()
                        .HasForeignKey("OrderToSupplierGroupId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Stock_Data_Api.Models.PaymentCondition", "PaymentCondition")
                        .WithMany()
                        .HasForeignKey("PaymentConditionId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Stock_Data_Api.Models.Import.PaymentImport", "Payment")
                        .WithMany()
                        .HasForeignKey("PaymentId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Stock_Data_Api.Models.PersonToContact", "PersonToContact")
                        .WithMany()
                        .HasForeignKey("PersonToContactId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Stock_Data_Api.Models.Seller", "Seller")
                        .WithMany()
                        .HasForeignKey("SellerId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Stock_Data_Api.Models.Import.Supplier", "Supplier")
                        .WithMany()
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Stock_Data_Api.Models.Frequent_Entiities.TabArticles", "TabArticles")
                        .WithMany()
                        .HasForeignKey("TabArticlesId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("AssociatedDocs");

                    b.Navigation("DeliveryAddress");

                    b.Navigation("DeliveryMode");

                    b.Navigation("Group");

                    b.Navigation("OrderToSupplierGroup");

                    b.Navigation("Payment");

                    b.Navigation("PaymentCondition");

                    b.Navigation("PersonToContact");

                    b.Navigation("Seller");

                    b.Navigation("Supplier");

                    b.Navigation("TabArticles");
                });

            modelBuilder.Entity("Stock_Data_Api.Models.Import.PaymentImport", b =>
                {
                    b.HasOne("Stock_Data_Api.Models.AssociatedDocs", "AssociatedDocs")
                        .WithMany()
                        .HasForeignKey("AssociatedDocsId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Stock_Data_Api.Models.Import.Supplier", "Supplier")
                        .WithMany()
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("AssociatedDocs");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("Stock_Data_Api.Models.Import.PaymentOfModeImport", b =>
                {
                    b.HasOne("Stock_Data_Api.Models.Import.PaymentImport", "PaymentImport")
                        .WithMany("PaymentOfModes")
                        .HasForeignKey("PaymentImportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Stock_Data_Api.Models.PaymentMode", "PaymentMode")
                        .WithMany()
                        .HasForeignKey("PaymentModeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("PaymentImport");

                    b.Navigation("PaymentMode");
                });

            modelBuilder.Entity("Stock_Data_Api.Models.Import.PersonContactsSupplier", b =>
                {
                    b.HasOne("Stock_Data_Api.Models.PersonToContact", "PersonToContact")
                        .WithMany()
                        .HasForeignKey("PersonToContactId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Stock_Data_Api.Models.Import.Supplier", "Supplier")
                        .WithMany("SupplierContacts")
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("PersonToContact");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("Stock_Data_Api.Models.Import.Supplier", b =>
                {
                    b.HasOne("Stock_Data_Api.Models.AssociatedDocs", "AssociatedDocs")
                        .WithMany()
                        .HasForeignKey("AssociatedDocsId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Stock_Data_Api.Models.Address", "BillingAddress")
                        .WithMany()
                        .HasForeignKey("BillingAddressId");

                    b.HasOne("Stock_Data_Api.Models.Address", "DeliveryAddress")
                        .WithMany()
                        .HasForeignKey("DeliveryAddressId");

                    b.HasOne("Stock_Data_Api.Models.PaymentCondition", "PaymentCondition")
                        .WithMany()
                        .HasForeignKey("PaymentConditionId");

                    b.HasOne("Stock_Data_Api.Models.Tax", "Tax")
                        .WithMany()
                        .HasForeignKey("taxId");

                    b.Navigation("AssociatedDocs");

                    b.Navigation("BillingAddress");

                    b.Navigation("DeliveryAddress");

                    b.Navigation("PaymentCondition");

                    b.Navigation("Tax");
                });

            modelBuilder.Entity("Stock_Data_Api.Models.Inventory.Article", b =>
                {
                    b.HasOne("Stock_Data_Api.Models.Inventory.ArticleGroup", "ArticleGroup")
                        .WithMany("Articles")
                        .HasForeignKey("ArticleGroupId");

                    b.HasOne("Stock_Data_Api.Models.Inventory.ArticleStockInfo", "ArticleStockInf")
                        .WithMany()
                        .HasForeignKey("ArticleStockInfoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Stock_Data_Api.Models.Dimension", "Dimension")
                        .WithMany()
                        .HasForeignKey("DimensionId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Stock_Data_Api.Models.Inventory.ArticleImportInfo", "ImportInfo")
                        .WithMany()
                        .HasForeignKey("ImportInfoId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Stock_Data_Api.Models.Manufacturer", "Manufacturer")
                        .WithMany()
                        .HasForeignKey("ManufacturerId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Stock_Data_Api.Models.Inventory.Mark", "Mark")
                        .WithMany()
                        .HasForeignKey("MarkId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Stock_Data_Api.Models.Inventory.ArticleSellingInfo", "SellInfo")
                        .WithMany()
                        .HasForeignKey("SellInfoId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Stock_Data_Api.Models.Unit", "Unit")
                        .WithMany()
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("ArticleGroup");

                    b.Navigation("ArticleStockInf");

                    b.Navigation("Dimension");

                    b.Navigation("ImportInfo");

                    b.Navigation("Manufacturer");

                    b.Navigation("Mark");

                    b.Navigation("SellInfo");

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("Stock_Data_Api.Models.Inventory.ArticleImportInfo", b =>
                {
                    b.HasOne("Stock_Data_Api.Models.Import.Supplier", "PreferredSupplier")
                        .WithMany()
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Stock_Data_Api.Models.Tax", "Tax")
                        .WithMany()
                        .HasForeignKey("TaxId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("PreferredSupplier");

                    b.Navigation("Tax");
                });

            modelBuilder.Entity("Stock_Data_Api.Models.Inventory.ArticleSellingInfo", b =>
                {
                    b.HasOne("Stock_Data_Api.Models.Tax", "Tax")
                        .WithMany()
                        .HasForeignKey("TaxId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Tax");
                });

            modelBuilder.Entity("Stock_Data_Api.Models.Sell.ArticlesInfo", b =>
                {
                    b.HasOne("Stock_Data_Api.Models.Frequent_Entiities.TabArticles", null)
                        .WithMany("articlesInfo")
                        .HasForeignKey("TabArticlesId");
                });

            modelBuilder.Entity("Stock_Data_Api.Models.Sell.ChequeOfModeSell", b =>
                {
                    b.HasOne("Stock_Data_Api.Models.PaymentMode", "PaymentMode")
                        .WithMany()
                        .HasForeignKey("PaymentModeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Stock_Data_Api.Models.Sell.PaymentSell", "PaymentSell")
                        .WithMany()
                        .HasForeignKey("PaymentSellId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PaymentMode");

                    b.Navigation("PaymentSell");
                });

            modelBuilder.Entity("Stock_Data_Api.Models.Sell.Client", b =>
                {
                    b.HasOne("Stock_Data_Api.Models.AssociatedDocs", "AssociatedDocs")
                        .WithMany()
                        .HasForeignKey("AssociatedDocsId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Stock_Data_Api.Models.Address", "BillingAddress")
                        .WithMany()
                        .HasForeignKey("BillingAddressId");

                    b.HasOne("Stock_Data_Api.Models.Address", "DeliveryAddress")
                        .WithMany()
                        .HasForeignKey("DeliveryAddressId");

                    b.HasOne("Stock_Data_Api.Models.PaymentCondition", "PaymentCondition")
                        .WithMany()
                        .HasForeignKey("PaymentConditionId");

                    b.HasOne("Stock_Data_Api.Models.Tax", "Tax")
                        .WithMany()
                        .HasForeignKey("taxId");

                    b.Navigation("AssociatedDocs");

                    b.Navigation("BillingAddress");

                    b.Navigation("DeliveryAddress");

                    b.Navigation("PaymentCondition");

                    b.Navigation("Tax");
                });

            modelBuilder.Entity("Stock_Data_Api.Models.Sell.CustumerOrder", b =>
                {
                    b.HasOne("Stock_Data_Api.Models.AssociatedDocs", "AssociatedDocs")
                        .WithMany()
                        .HasForeignKey("AssociatedDocsId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Stock_Data_Api.Models.Sell.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Stock_Data_Api.Models.Address", "DeliveryAddress")
                        .WithMany()
                        .HasForeignKey("DeliveryAddressId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Stock_Data_Api.Models.Frequent_Entiities.DeliveryMode", "DeliveryMode")
                        .WithMany()
                        .HasForeignKey("DeliveryModeId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Stock_Data_Api.Models.Sell.Group_Classes.ClientOrderGroup", "Group")
                        .WithMany()
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Stock_Data_Api.Models.Sell.Group_Classes.InvoiceSellGroup", "OrderToSupplierGroup")
                        .WithMany()
                        .HasForeignKey("OrderToSupplierGroupId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Stock_Data_Api.Models.PaymentCondition", "PaymentCondition")
                        .WithMany()
                        .HasForeignKey("PaymentConditionId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Stock_Data_Api.Models.Sell.PaymentSell", "Payment")
                        .WithMany()
                        .HasForeignKey("PaymentId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Stock_Data_Api.Models.PersonToContact", "PersonToContact")
                        .WithMany()
                        .HasForeignKey("PersonToContactId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Stock_Data_Api.Models.Seller", "Seller")
                        .WithMany()
                        .HasForeignKey("SellerId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Stock_Data_Api.Models.Frequent_Entiities.TabArticles", "TabArticles")
                        .WithMany()
                        .HasForeignKey("TabArticlesId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("AssociatedDocs");

                    b.Navigation("Client");

                    b.Navigation("DeliveryAddress");

                    b.Navigation("DeliveryMode");

                    b.Navigation("Group");

                    b.Navigation("OrderToSupplierGroup");

                    b.Navigation("Payment");

                    b.Navigation("PaymentCondition");

                    b.Navigation("PersonToContact");

                    b.Navigation("Seller");

                    b.Navigation("TabArticles");
                });

            modelBuilder.Entity("Stock_Data_Api.Models.Sell.Group_Classes.InvoiceSellGroup", b =>
                {
                    b.HasOne("Stock_Data_Api.Models.Import.InvoiceImport", "RelatedInvoiceImport")
                        .WithMany()
                        .HasForeignKey("RelatedInvoiceImportId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("RelatedInvoiceImport");
                });

            modelBuilder.Entity("Stock_Data_Api.Models.Sell.InvoiceCreditSell", b =>
                {
                    b.HasOne("Stock_Data_Api.Models.AssociatedDocs", "AssociatedDocs")
                        .WithMany()
                        .HasForeignKey("AssociatedDocsId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Stock_Data_Api.Models.Sell.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Stock_Data_Api.Models.Sell.Group_Classes.InvoiceSellGroup", "InvoiceSellGroup")
                        .WithMany()
                        .HasForeignKey("InvoiceSellGroupId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Stock_Data_Api.Models.PaymentCondition", "PaymentCondition")
                        .WithMany()
                        .HasForeignKey("PaymentConditionId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Stock_Data_Api.Models.Seller", "Seller")
                        .WithMany()
                        .HasForeignKey("SellerId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Stock_Data_Api.Models.Frequent_Entiities.TabArticles", "TabArticles")
                        .WithMany()
                        .HasForeignKey("TabArticlesId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("AssociatedDocs");

                    b.Navigation("Client");

                    b.Navigation("InvoiceSellGroup");

                    b.Navigation("PaymentCondition");

                    b.Navigation("Seller");

                    b.Navigation("TabArticles");
                });

            modelBuilder.Entity("Stock_Data_Api.Models.Sell.InvoiceSell", b =>
                {
                    b.HasOne("Stock_Data_Api.Models.AssociatedDocs", "AssociatedDocs")
                        .WithMany()
                        .HasForeignKey("AssociatedDocsId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Stock_Data_Api.Models.Sell.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Stock_Data_Api.Models.PaymentCondition", "PaymentCondition")
                        .WithMany()
                        .HasForeignKey("PaymentConditionId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Stock_Data_Api.Models.Seller", "Seller")
                        .WithMany()
                        .HasForeignKey("SellerId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Stock_Data_Api.Models.Frequent_Entiities.TabArticles", "TabArticles")
                        .WithMany()
                        .HasForeignKey("TabArticlesId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("AssociatedDocs");

                    b.Navigation("Client");

                    b.Navigation("PaymentCondition");

                    b.Navigation("Seller");

                    b.Navigation("TabArticles");
                });

            modelBuilder.Entity("Stock_Data_Api.Models.Sell.PaymentOfModeSell", b =>
                {
                    b.HasOne("Stock_Data_Api.Models.PaymentMode", "PaymentMode")
                        .WithMany()
                        .HasForeignKey("PaymentModeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Stock_Data_Api.Models.Sell.PaymentSell", "PaymentSell")
                        .WithMany("PaymentOfModes")
                        .HasForeignKey("PaymentSellId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PaymentMode");

                    b.Navigation("PaymentSell");
                });

            modelBuilder.Entity("Stock_Data_Api.Models.Sell.PaymentSell", b =>
                {
                    b.HasOne("Stock_Data_Api.Models.AssociatedDocs", "AssociatedDocs")
                        .WithMany()
                        .HasForeignKey("AssociatedDocsId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Stock_Data_Api.Models.Sell.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("AssociatedDocs");

                    b.Navigation("Client");
                });

            modelBuilder.Entity("Stock_Data_Api.Models.Sell.PersonContactsClient", b =>
                {
                    b.HasOne("Stock_Data_Api.Models.Sell.Client", "Client")
                        .WithMany("ClientContacts")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Stock_Data_Api.Models.PersonToContact", "PersonToContact")
                        .WithMany()
                        .HasForeignKey("PersonToContactId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("PersonToContact");
                });

            modelBuilder.Entity("Stock_Data_Api.Models.AssociatedDocs", b =>
                {
                    b.Navigation("AssociatedDocsFiles");
                });

            modelBuilder.Entity("Stock_Data_Api.Models.Frequent_Entiities.TabArticles", b =>
                {
                    b.Navigation("articlesInfo");
                });

            modelBuilder.Entity("Stock_Data_Api.Models.Import.PaymentImport", b =>
                {
                    b.Navigation("PaymentOfModes");
                });

            modelBuilder.Entity("Stock_Data_Api.Models.Import.Supplier", b =>
                {
                    b.Navigation("SupplierContacts");
                });

            modelBuilder.Entity("Stock_Data_Api.Models.Inventory.ArticleGroup", b =>
                {
                    b.Navigation("Articles");
                });

            modelBuilder.Entity("Stock_Data_Api.Models.Sell.Client", b =>
                {
                    b.Navigation("ClientContacts");
                });

            modelBuilder.Entity("Stock_Data_Api.Models.Sell.PaymentSell", b =>
                {
                    b.Navigation("PaymentOfModes");
                });
#pragma warning restore 612, 618
        }
    }
}
